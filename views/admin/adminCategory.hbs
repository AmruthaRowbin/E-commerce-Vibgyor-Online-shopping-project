<div class="container">
        <div class="row tm-content-row tm-mt-big">
            <div class="col-xl-12 col-lg-12 tm-md-12 tm-sm-12 tm-block-col">
                {{!-- <div class="bg-white tm-block h-100"> --}}
                    <div class="row">
                       
                        <div class="col-md-8 col-sm-12">
                            <h2 class="tm-block-title d-inline-block">Category</h2>
                        </div>

                       <div class="col-md-4 col-sm-12 text-right">
                            <a data-toggle="modal" data-target="#add" class="btn btn-small btn-primary">Add Category</a>
                        </div>
                    </div>
                    <!-- Table Start -->
            <div class="container-fluid pt-4 px-4">
                <div class="row g-4">  
                    <div class="col-12">
                        <div class="bg-secondary rounded h-100 p-4">
                            <h6 class="mb-4">Category</h6>
                            <div class="table-responsive">
                                <table class="table"  id="productsTable">
                                    <thead>
                                        <tr class="tm-bg-gray">
                                    <th scope="col">Category Name</th>
                                    <th scope="col">Delete Category </th>
                                </tr>
                                    </thead>
                                    <tbody>
                                         {{#each category}} 
                                <tr>
                                    <td>{{this.name}}</td>
                                    <td><a class=" btn btn-primary" data-toggle="modal" data-target="#delete{{this._id}}"><i
                                            class="fas fa-trash-alt tm-trash-icon"></i></a></td>
                                            
                                </tr>
                                {{/each}}
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <!-- Table End -->
                    
                        
                             

        {{#if category.length}}

        {{#each category}}
        <div class="modal fade" id="delete{{this._id}}" tabindex="-1" role="dialog"
            aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
            <div class="modal-dialog modal-dialog-centered" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="exampleModalLongTitle">Delete confirmation</h5>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                    <div class="modal-body">
                        Do you want to delete Category <b class="text-dark">{{this.name}}</b>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-dismiss="modal" >cancel</button>
                        <button type="button" class="btn btn-danger"id="confirmDelete{{this._id}}/{{this.name}}">delete</button>
                    </div>
                </div>
            </div>
        </div>
        {{/each}}
        {{else}}
    <p style="font-size: 2.2em;">No category found</p>
{{/if}}


<div class="modal fade" id="add" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel" style="color: black">Add Category</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <form class="text-dark" action="/admin/adminCategory" method="post" onsubmit="return validateForm()">
                    <div class="form-group">
                        <label for="name" class="col-form-label">Category Name:</label>
                        <input type="text" name="name" value="{{this.name}}" style="color: black;" class="border" id="name">
                        <span id="name-error" class="text-danger error-message"></span>
                    </div>
                    <div class="form-group">
                        <label for="description" class="col-form-label">Description:</label>
                        <input type="text" name="description" value="{{this.description}}" class="border" id="description">
                        <span id="description-error" class="text-danger error-message"></span>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-dismiss="modal">Cancel</button>
                        <button type="submit" class="btn btn-primary"onclick="checkCategoryExistence(event)">Confirm</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>



<script>
  function validateForm() {
    var name = document.getElementById("name").value;
    var description = document.getElementById("description").value;
    var nameError = document.getElementById("name-error");
    var descriptionError = document.getElementById("description-error");
    var hasError = false;

    // Validation for name
    if (name === "") {
        nameError.innerHTML = "Name is required";
        nameError.style.display = "block";
        hasError = true;
    } else {
        nameError.innerHTML = "";
        nameError.style.display = "none";
    }

    // Validation for description
    if (description === "") {
        descriptionError.innerHTML = "Description is required";
        descriptionError.style.display = "block";
        hasError = true;
    } else {
        descriptionError.innerHTML = "";
        descriptionError.style.display = "none";
    }

    // If there are errors, prevent form submission
    if (hasError) {
        return false;
    }
}



</script>


<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/ion-rangeslider/2.3.1/js/ion.rangeSlider.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>


<script>
     $(function () {
    $('#productsTable').DataTable();
  });
</script>

{{!-- category delete alert message --}}

<script>
        const confirmDeleteButtons = document.querySelectorAll('[id^="confirmDelete"]');

        confirmDeleteButtons.forEach(button => {
          button.addEventListener('click', (event) => {
            event.preventDefault();

            const categoryId = button.id.replace('confirmDelete', '');

            fetch(`/admin/adminDeleteCategory/${categoryId}`, {
              method: 'get',
            })
              .then(response => {
                if (response.ok) {
                  alertify.set('notifier', 'position', 'top-right');
                  alertify.notify('category deleted successfully.', 'success', 2, function () { location.reload(); }); // Reload the page after 3 seconds
                } else {
                  alertify.error('Failed to delete category.');
                }
              })
              .catch(error => {
                alertify.error('Failed to delete category.');
                console.error(error);
              });
          });
        });
      </script>


{{!-- alredy existing category alert message --}}

     <script>
    function checkCategoryExistence(event) {
        event.preventDefault(); // Prevent form submission

        // Retrieve the category name entered by the user
        const categoryName = document.getElementById('name').value;

        // Perform an AJAX request to check if the category already exists
        // Replace this code with your own logic to check category existence

        const categoryExists = false; // Replace with your own logic or AJAX response

        if (categoryExists) {
            alertify.alert('Category Already Exists', 'The category already exists. Please choose a different name.');
        } else {
            // Category doesn't exist, submit the form
            event.target.form.submit();
        }
    }
</script>
